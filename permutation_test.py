import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import statistics
from mlxtend.evaluate import permutation_test

significance_level = 0.05
unwt = [0.458518, 0.777538, 0.67163, 0.69898, 0.616587, 0.048897, 0.642826, 0.807522, 0.72445, 0.613052, 0.463054, 0.772753, 0.72389, 0.65163, 0.727938, 0.327396, 0.566908, 0.725945, 0.717264, 0.580691, 0.613791, 0.825085, 0.797424, 0.725477, 0.74827, 0.695866, 0.763386, 0.713137, 0.695608, 0.479585]
treatment_no_dropout = [0.499914, 0.795847, 0.7514, 0.591276, 0.777144, 0.493248, 0.724345, 0.45155, 0.648023, 0.594509, 0.36199, 0.735969, 0.530033, 0.478607, 0.506635, 0.41718, 0.429825, 0.502253, 0.473225, 0.313795, 0.309765, 0.781212, 0.522434, 0.465672, 0.532981, 0.473109, 0.610229, 0.594966, 0.511591, 0.36174]
treatment_no_qkv = [0.494659, 0.79163, 0.666945, 0.67319, 0.729938, 0.485557, 0.787188, 0.539936, 0.541545, 0.495934, 0.677442, 0.831039, 0.80883, 0.720074, 0.761836, 0.604124, 0.737568, 0.641775, 0.820704, 0.752981, 0.574703, 0.816193, 0.764458, 0.833778, 0.780071, 0.375301, 0.805663, 0.582071, 0.649159, 0.66981]
treatment_1head64 = [0.459019, 0.828603, 0.766566, 0.559579, 0.688218, 0.376115, 0.753273, 0.582943, 0.563341, 0.668142, 0.575543, 0.802309, 0.802848, 0.681425, 0.723556, 0.557854, 0.670377, 0.690357, 0.735596, 0.57472, 0.697377, 0.844664, 0.873639, 0.668727, 0.800916, 0.510439, 0.800251, 0.663986, 0.852978, 0.407438]
treatment_no_attention = [0.698505, 0.812897, 0.741717, 0.788756, 0.779539, 0.527164, 0.799084, 0.65729, 0.797317, 0.775271, 0.586952, 0.818419, 0.738209, 0.764481, 0.787924, 0.249629, 0.816502, 0.576586, 0.791734, 0.669139, 0.338961, 0.77303, 0.711587, 0.609477, 0.711637, 0.427061, 0.624427, 0.596153, 0.534403, 0.474959]
unet = [0.463528, 0.79273, 0.749587, 0.694097, 0.748277, 0.260549, 0.469069, 0.762904, 0.633708, 0.454492, 0.574951, 0.805651, 0.725617, 0.681368, 0.802516, 0.48918, 0.663131, 0.719921, 0.702498, 0.605471, 0.45123, 0.678076, 0.634238, 0.819282, 0.740465, 0.46538, 0.54691, 0.810989, 0.685686, 0.48909]
unet_with_dropout = [0.223252, 0.794586, 0.529038, 0.632787, 0.64384, 0.220899, 0.506, 0.67398, 0.492639, 0.283389, 0.216028, 0.740836, 0.52928, 0.587262, 0.688057, 0.123113, 0.444432, 0.802208, 0.480324, 0.403814, 0.505493, 0.737003, 0.725516, 0.759577, 0.793436, 0.353538, 0.587981, 0.807728, 0.684061, 0.721871]

fets_SD_unet_whole_tumor_da025 = [0.87481, 0.70444, 0.53292, 0.87881, 0.68851, 0.40700, 0.79106, 0.69906, 0.85932, 0.66997, 0.58787, 0.76482, 0.90413, 0.78583, 0.88197, 0.40917, 0.20495, 0.57684, 0.80915, 0.63828]
fets_TD1_unet_whole_tumor_da025 = [0.43638, 0.49863, 0.18457, 0.76557, 0.28010, 0.12441, 0.64126, 0.55699, 0.62203, 0.24856, 0.44895, 0.40824, 0.50419, 0.55040, 0.64969, 0.70281, 0.26611, 0.17982, 0.49278, 0.74973, 0.27254, 0.34030, 0.70738, 0.75417, 0.28625, 0.71122, 0.46652, 0.43673, 0.60940, 0.61891, 0.53007, 0.30953, 0.76087, 0.35968]
fets_TD2_unet_whole_tumor_da025 = [0.60255, 0.55285, 0.69285, 0.54346, 0.56443, 0.86923, 0.63368, 0.56586, 0.68184, 0.25541, 0.55715, 0.47063, 0.53353, 0.26935, 0.49734, 0.09831, 0.45892, 0.20928, 0.82144, 0.69711, 0.93373, 0.80768, 0.17054, 0.40369, 0.37645, 0.61061, 0.55940, 0.36631, 0.83061, 0.51609, 0.65617, 0.22254, 0.86733, 0.25718]

fets_SD_unet_enhancing_tumor_da025 = [0.83653, 0.62650, 0.46053, 0.82161, 0.59003, 0.29152, 0.53480, 0.63457, 0.88818, 0.69681, 0.52548, 0.68059, 0.73843, 0.66860, 0.54736, 0.35524, 0.35464, 0.73880, 0.79877, 0.67471]
fets_TD1_unet_enhancing_tumor_da025 = [0.16495, 0.13709, 0.29340, 0.47678, 0.28618, 0.27288, 0.37057, 0.41851, 0.66111, 0.10835, 0.60234, 0.68880, 0.56666, 0.79626, 0.67043, 0.66993, 0.30790, 0.15770, 0.68445, 0.74354, 0.41656, 0.00087, 0.72629, 0.62815, 0.49364, 0.88789, 0.54936, 0.35661, 0.53908, 0.29341, 0.72173, 0.11170, 0.59207, 0.57395]
fets_TD2_unet_enhancing_tumor_da025 = [0.30908, 0.24720, 0.53400, 0.26345, 0.11884, 0.56980, 0.60523, 0.40633, 0.33283, 0.21937, 0.44419, 0.68907, 0.51919, 0.14572, 0.42509, 0.19911, 0.41356, 0.20382, 0.38591, 0.51065, 0.35797, 0.68171, 0.26493, 0.31474, 0.23626, 0.45986, 0.40374, 0.39124, 0.40939, 0.50984, 0.41869, 0.21011, 0.46858, 0.34881]

fets_SD_unet_tumor_core_da025 = [0.81147, 0.60416, 0.51558, 0.81642, 0.58499, 0.28360, 0.49972, 0.77337, 0.78681, 0.86995, 0.74374, 0.75523, 0.60140, 0.69997, 0.42032, 0.23325, 0.36409, 0.78939, 0.81632, 0.77030]
fets_TD1_unet_tumor_core_da025 = [0.36582, 0.12699, 0.40664, 0.67457, 0.23766, 0.29309, 0.46874, 0.37472, 0.65660, 0.11993, 0.57906, 0.70736, 0.53384, 0.75713, 0.50894, 0.81381, 0.33459, 0.21652, 0.84353, 0.79950, 0.27284, 0.00650, 0.71744, 0.59092, 0.63140, 0.85123, 0.61005, 0.36370, 0.44741, 0.24398, 0.70598, 0.07755, 0.51835, 0.73982]
fets_TD2_unet_tumor_core_da025 = [0.33183, 0.24402, 0.69127, 0.45960, 0.19096, 0.81790, 0.61554, 0.63008, 0.32309, 0.36131, 0.48882, 0.67826, 0.50037, 0.22657, 0.68717, 0.17582, 0.39489, 0.35097, 0.40702, 0.67016, 0.65829, 0.83139, 0.51759, 0.37259, 0.39293, 0.50331, 0.45590, 0.47106, 0.37493, 0.50402, 0.55260, 0.31118, 0.55917, 0.31595]

fets_SD_unet_whole_tumor_da05 = [0.88038, 0.82477, 0.57200, 0.87592, 0.62998, 0.60999, 0.83740, 0.79148, 0.86576, 0.76304, 0.52992, 0.86770, 0.92621, 0.87582, 0.89500, 0.45920, 0.34485, 0.65676, 0.86856, 0.66630]
fets_TD1_unet_whole_tumor_da05 = [0.54748, 0.43127, 0.24627, 0.84614, 0.41209, 0.23724, 0.68111, 0.70022, 0.75857, 0.26087, 0.59294, 0.63671, 0.58579, 0.68859, 0.81646, 0.78274, 0.41968, 0.29069, 0.54272, 0.82344, 0.46282, 0.30678, 0.77104, 0.84378, 0.65876, 0.85731, 0.45293, 0.58066, 0.80724, 0.52025, 0.70766, 0.25623, 0.85763, 0.41854]
fets_TD2_unet_whole_tumor_da05 = [0.65191, 0.49782, 0.78360, 0.69029, 0.72215, 0.91828, 0.71748, 0.71973, 0.70031, 0.49002, 0.72035, 0.54167, 0.65270, 0.34130, 0.70214, 0.09252, 0.48692, 0.34246, 0.85000, 0.70992, 0.93546, 0.80598, 0.25486, 0.44596, 0.61590, 0.72922, 0.70095, 0.50318, 0.84516, 0.55622, 0.76280, 0.37220, 0.90970, 0.28734]

fets_SD_unet_enhancing_tumor_da05 = [0.82387, 0.72137, 0.61487, 0.81675, 0.35559, 0.39891, 0.64462, 0.72166, 0.86583, 0.76715, 0.46340, 0.76834, 0.78093, 0.78462, 0.60958, 0.49586, 0.59067, 0.73074, 0.83048, 0.68717]
fets_TD1_unet_enhancing_tumor_da05 = [0.44682, 0.08205, 0.40111, 0.64530, 0.42826, 0.37731, 0.47402, 0.73773, 0.69754, 0.10797, 0.72871, 0.74510, 0.61604, 0.76177, 0.75399, 0.70102, 0.44482, 0.33708, 0.75870, 0.72994, 0.63289, 0.00000, 0.79368, 0.81111, 0.64511, 0.81297, 0.60346, 0.52000, 0.69600, 0.42875, 0.57833, 0.09725, 0.74716, 0.57119]
fets_TD2_unet_enhancing_tumor_da05 = [0.48792, 0.32719, 0.61985, 0.48859, 0.47488, 0.64797, 0.70860, 0.58873, 0.45342, 0.43517, 0.65769, 0.69964, 0.72914, 0.32602, 0.65061, 0.09637, 0.42357, 0.42266, 0.48322, 0.59973, 0.54374, 0.75265, 0.55801, 0.38761, 0.54266, 0.63403, 0.56058, 0.59325, 0.47489, 0.49544, 0.61344, 0.51935, 0.72811, 0.34705] 

fets_SD_unet_tumor_core_da05 = [0.82908, 0.72177, 0.65164, 0.90147, 0.34051, 0.35393, 0.58284, 0.84422, 0.91797, 0.86102, 0.63358, 0.81199, 0.71419, 0.82028, 0.61928, 0.30882, 0.59303, 0.81963, 0.85340, 0.77715]
fets_TD1_unet_tumor_core_da05 = [0.49936, 0.05034, 0.42105, 0.73512, 0.42693, 0.37453, 0.51923, 0.75087, 0.81378, 0.09220, 0.71169, 0.81615, 0.55318, 0.84404, 0.70149, 0.73259, 0.47251, 0.33129, 0.91503, 0.76534, 0.49859, 0.00012, 0.86396, 0.82939, 0.80375, 0.92739, 0.57012, 0.49611, 0.64298, 0.40254, 0.69347, 0.07756, 0.64556, 0.77248]
fets_TD2_unet_tumor_core_da05 = [0.54006, 0.32324, 0.75392, 0.53352, 0.47043, 0.72223, 0.71071, 0.71700, 0.47247, 0.48786, 0.63450, 0.70737, 0.71534, 0.39680, 0.61008, 0.06039, 0.40806, 0.46231, 0.48751, 0.76680, 0.69526, 0.91563, 0.57072, 0.35519, 0.54636, 0.73220, 0.53488, 0.58782, 0.41427, 0.48377, 0.65138, 0.55747, 0.75445, 0.32652]


orig_result = statistics.mean(unet_with_dropout) - statistics.mean(unet)

all_data = unet + unet_with_dropout  

def perm_test(data):

    shuffled_data = np.random.permutation(data)
    new_control_group_avg = statistics.mean(shuffled_data[:len(shuffled_data)//2])
    new_treatment_group_avg = statistics.mean(shuffled_data[len(shuffled_data)//2:])

    return  new_treatment_group_avg - new_control_group_avg 

def plot_test_statistic(simulated_results, p_value):

    density_plot = sns.kdeplot(simulated_results, shade=True)
    density_plot.set(
    xlabel='Difference in Dice Score average (treatment - control)',
    ylabel='Proportion of Simulations',
    title='Unet with Dropout layers - Test Statistic Distribution '
)

    density_plot.axvline(
        x=orig_result, 
        color='red', 
        linestyle='--'
    )

    plt.text(-0.17, 1.8, f'p-value: {round(p_value, 3)}', size = 'small', color = 'black')

    plt.legend(
    labels=[f'Observed Difference', 'Simulated'], 
    loc='upper right'
)

    plt.show()
    plt.savefig('/scratch_net/biwidl217_second/arismu/Data_MT/plots/stat_test_unet_with_dropout.png')

def paired_two_sample_test():
    p_value = permutation_test(
    unet, unet_with_dropout, paired=True, method="approximate", seed=0, num_rounds=100000
)
    significant = p_value < significance_level
    print(f'The p-value in the Paired two-sided randomization test is {p_value}')
    if significant:
        print(f'Paired two-sided randomization test: The difference is statistically significant!')
    else:
        print("Paired two-sided randomization test: The difference is not statistically significant!")


if __name__ == "__main__":

    num_simulations = 100000
    simulated_results = []
    simulations_greater_than_observed = 0
    
    for _ in range(num_simulations):
        simulated_results.append(perm_test(all_data))

    for x in simulated_results:
        if x <= orig_result:
            simulations_greater_than_observed = simulations_greater_than_observed + 1

    num_simulations = len(simulated_results)
    p_value = simulations_greater_than_observed / num_simulations

    plot_test_statistic(simulated_results, p_value)

    significant = p_value < significance_level

    print(f'The p-value in the Two-sided randomization test is {p_value}')

    if significant:
        print(f'Two-sided randomization test: The difference is statistically significant!')
    else:
        print("Two-sided randomization test: The difference is not statistically significant!")

    paired_two_sample_test()

    